import java.nio.file.Files

plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'
    id "com.diffplug.spotless" version "7.0.4"
    id 'io.github.gradle-nexus.publish-plugin' version '2.0.0'
}

group = 'io.flipt'
version = '0.17.0-rc.1'
description = 'Flipt Client SDK'

java {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    withSourcesJar()
    withJavadocJar()
}

repositories {
    mavenCentral()
}

dependencies {
    implementation libs.jackson.dataformat.xml
    implementation libs.jackson.datatype.jdk8
    implementation libs.jna.platform
    testImplementation platform(libs.junit.bom)
    testImplementation libs.junit.jupiter
    testImplementation 'org.skyscreamer:jsonassert:1.5.3'
}

spotless {
    java {
        importOrder()

        removeUnusedImports()

        cleanthat()

        googleJavaFormat()

        formatAnnotations()
    }
}

test {
    useJUnitPlatform()
}

publishing {
    publications {
        maven(MavenPublication) {
            artifactId = 'flipt-client-java'
            from components.java

            pom {
                name = 'Flipt Client Java SDK'
                description = 'Flipt Client Java SDK'
                url = 'https://github.com/flipt-io/flipt-client-sdks/tree/main/flipt-client-java'

                licenses {
                    license {
                        name = 'MIT'
                        url = 'https://opensource.org/license/mit/'
                    }
                }

                developers {
                    developer {
                        id = 'flipt-io'
                        name = 'Flipt'
                        email = 'devs@flipt.io'
                    }
                }

                scm {
                    connection = 'scm:git:git://github.com/flipt-io/flipt-client-sdks.git'
                    developerConnection = 'scm:git:ssh://github.com/flipt-io/flipt-client-sdks.git'
                    url = 'https://github.com/flipt-io/flipt-client-sdks/tree/main/flipt-client-java'
                }
            }
        }
    }
    repositories {
        maven {
            def releasesRepoUrl = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotsRepoUrl = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                username = System.getenv("MAVEN_USERNAME")
                password = System.getenv("MAVEN_PASSWORD")
            }
        }
    }
}

signing {
    def signingKey = System.getenv('PGP_PRIVATE_KEY')
    def signingPassphrase = System.getenv('PGP_PASSPHRASE')
    useInMemoryPgpKeys(signingKey, signingPassphrase)
    sign publishing.publications.maven
}

nexusPublishing {
    repositories {
        sonatype {
            nexusUrl.set(uri("https://s01.oss.sonatype.org/service/local/"))
            snapshotRepositoryUrl.set(uri("https://s01.oss.sonatype.org/content/repositories/snapshots/"))
            username = System.getenv("MAVEN_USERNAME")
            password = System.getenv("MAVEN_PASSWORD")
            packageGroup = "io.flipt"
        }
    }
    // Enable auto-release
    transitionCheckOptions {
        maxRetries.set(60)  // Number of times to retry
        delayBetween.set(java.time.Duration.ofSeconds(10))  // Time between retries
    }
}
