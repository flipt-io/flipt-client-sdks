name: Package FFI SDKs
on:
  workflow_call:
    inputs:
      engine-tag:
        description: "Engine tag to build"
        type: string
        required: false
      sdks:
        description: "SDK(s) to build"
        type: string
        required: true
      tag:
        description: "Tag to use for SDK(s)"
        type: string
        required: false

permissions:
  contents: write
  id-token: write

env:
  RUBYGEMS_API_KEY: ${{ secrets.RUBYGEMS_API_KEY }}
  NPM_API_KEY: ${{ secrets.NPM_API_KEY }}
  SONATYPE_PORTAL_USERNAME: ${{ secrets.SONATYPE_PORTAL_USERNAME }}
  SONATYPE_PORTAL_PASSWORD: ${{ secrets.SONATYPE_PORTAL_PASSWORD }}
  PYPI_API_KEY: ${{ secrets.PYPI_API_KEY }}
  PGP_PRIVATE_KEY: ${{ secrets.PGP_PRIVATE_KEY }}
  PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
  NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
  GO_VERSION: "1.25"
  DAGGER_VERSION: "0.18.17"

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      ENGINE_TAG: ${{ inputs.engine-tag }}
    steps:
      - uses: actions/checkout@v5

      - uses: actions/setup-go@v6
        with:
          go-version: ${{ env.GO_VERSION }}
          check-latest: true
          cache: true

      - name: Install Dagger
        run: |
          cd /usr/local
          curl -L https://dl.dagger.io/dagger/install.sh | DAGGER_VERSION=${{ env.DAGGER_VERSION }} sh

      - name: Generate token
        id: generate_token
        uses: actions/create-github-app-token@v2
        with:
          app-id: ${{ secrets.FLIPT_RELEASE_BOT_APP_ID }}
          private-key: ${{ secrets.FLIPT_RELEASE_BOT_APP_PEM }}
          owner: ${{ github.repository_owner }}

      - name: Get Pub.Dev OIDC Token
        if: ${{ inputs.sdks == 'dart' }}
        run: |
          OIDC_TOKEN=$(curl -sLS "${ACTIONS_ID_TOKEN_REQUEST_URL}&audience=https://pub.dev" -H "User-Agent: actions/oidc-client" -H "Authorization: Bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" | jq -r '.value')
          if [ -z "$OIDC_TOKEN" ]; then
            echo "Failed to obtain OIDC token"
            exit 1
          fi
          echo "PUB_TOKEN=$OIDC_TOKEN" >> $GITHUB_ENV

      - name: Build Individual SDK(s)
        env:
          GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}
        run: |
          dagger run go run ./package/ffi --sdks=${{ inputs.sdks }} --push=true --tag=${{ inputs.tag }} --engine-tag=${{ inputs.engine-tag }}
