// Top-level build file where you can add configuration options common to all sub-projects/modules.

plugins {
    id 'com.android.library' // For library modules
    id 'kotlin-android' // Correct plugin ID for Kotlin Android projects
    id 'org.jetbrains.kotlin.plugin.serialization'
    id 'maven-publish'
    id 'signing'
    id "org.jlleitschuh.gradle.ktlint" version "12.2.0"
    id 'io.github.gradle-nexus.publish-plugin' version '1.3.0'
}

group = 'io.flipt'
version = '0.0.1'
description = 'Flipt Client SDK'

android {
    namespace 'io.flipt'
    ndkVersion '25.1.8937393'
    compileSdk 33
    defaultConfig {
        minSdk 30
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
        ndk {
            abiFilters "x86_64", "arm64-v8a"
        }
        versionCode 2
        versionName "0.0.1"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            // Add test-specific build config fields
            def fliptUrl = System.getenv("FLIPT_URL") ?: ""
            def fliptAuthToken = System.getenv("FLIPT_AUTH_TOKEN") ?: ""
            buildConfigField("String", "FLIPT_URL", "\"$fliptUrl\"")
            buildConfigField("String", "FLIPT_AUTH_TOKEN", "\"$fliptAuthToken\"")
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
        freeCompilerArgs += '-opt-in=kotlin.RequiresOptIn'
    }

    externalNativeBuild {
        cmake {
            path "src/main/cpp/CMakeLists.txt"
        }
    }
    buildFeatures {
      buildConfig true
    }
}

dependencies {
    implementation libs.kotlinx.serialization.json
    testImplementation libs.junit
    androidTestImplementation libs.androidx.junit
    androidTestImplementation libs.androidx.espresso.core
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:2.1.20"
}

publishing {
    publications {
        maven(MavenPublication) {
            artifactId = 'flipt-client-android'
            afterEvaluate {
                from components.release
            }

            pom {
                name = 'Flipt Client Android SDK'
                description = 'Flipt Client Android SDK'
                url = 'https://github.com/flipt-io/flipt-client-sdks/tree/main/flipt-client-kotlin-android'

                licenses {
                    license {
                        name = 'MIT'
                        url = 'https://opensource.org/license/mit/'
                    }
                }

                developers {
                    developer {
                        id = 'flipt-io'
                        name = 'Flipt'
                        email = 'devs@flipt.io'
                    }
                }

                scm {
                    connection = 'scm:git:git://github.com/flipt-io/flipt-client-sdks.git'
                    developerConnection = 'scm:git:ssh://github.com/flipt-io/flipt-client-sdks.git'
                    url = 'https://github.com/flipt-io/flipt-client-sdks/tree/main/flipt-client-kotlin-android'
                }
            }
        }
    }
    repositories {
        maven {
            def releasesRepoUrl = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotsRepoUrl = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                username "$System.env.MAVEN_USERNAME"
                password "$System.env.MAVEN_PASSWORD"
            }
        }
    }
}

signing {
    def signingKey = System.getenv('PGP_PRIVATE_KEY')
    def signingPassphrase = System.getenv('PGP_PASSPHRASE')
    useInMemoryPgpKeys(signingKey, signingPassphrase)
    sign publishing.publications.maven
}

nexusPublishing {
    repositories {
        sonatype {
            nexusUrl.set(uri("https://s01.oss.sonatype.org/service/local/"))
            snapshotRepositoryUrl.set(uri("https://s01.oss.sonatype.org/content/repositories/snapshots/"))
            username = System.getenv("MAVEN_USERNAME")
            password = System.getenv("MAVEN_PASSWORD")
            packageGroup = "io.flipt"
        }
    }
    // Enable auto-release
    transitionCheckOptions {
        maxRetries.set(60)  // Number of times to retry
        delayBetween.set(java.time.Duration.ofSeconds(10))  // Time between retries
    }
}
